{
  "name": "specstory-autosave",
  "displayName": "SpecStory AutoSave + AI Copilot Prompt Detection",
  "description": "Auto-exports GitHub Copilot Chat to SpecStory documentation + instant AI prompt detection with quality verification notifications",
  	"version": "1.1.139",
  "publisher": "sunamocz",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/sunamo/specstory-autosave"
  },
  "bugs": {
    "url": "https://github.com/sunamo/specstory-autosave/issues"
  },
  "homepage": "https://github.com/sunamo/specstory-autosave#readme",
  "keywords": [
    "specstory",
    "copilot",
    "chat",
    "export",
    "autosave",
    "ai",
    "automation"
  ],
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other",
    "AI"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "specstoryautosave.findSpecStoryCommands",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Find All SpecStory Commands (Test)"
      },
      {
        "command": "specstoryautosave.testSpecStoryDialog",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test SpecStory Dialog (Test)"
      },
      {
        "command": "specstoryautosave.test",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test Extension"
      },
      {
        "command": "specstoryautosave.exportNow",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Export Chat History Now"
      },
      {
        "command": "specstoryautosave.showCopilotCommands",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Show Available Copilot Commands (Debug)"
      },
      {
        "command": "specstoryautosave.listAllCommands",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: List All Available Commands (Debug)"
      },
      {
        "command": "specstoryautosave.testAINotification",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Force AI Notification (Test)"
      },
      {
        "command": "specstoryautosave.forceAINotification",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Force AI Notification"
      },
      {
        "command": "specstoryautosave.testCopilotDetection",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test Copilot Detection"
      },
      {
        "command": "specstoryautosave.resetPromptCounter",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Reset AI Prompt Counter"
      },
      {
        "command": "specstoryautosave.toggleCopilotOnlyLogs",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Toggle Copilot-Only Logs"
      },
      {
        "command": "specstoryautosave.clearLogs",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Clear Output Logs"
      },
      {
        "command": "specstoryautosave.showPromptStats",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Show AI Prompt Statistics"
      },
      {
        "command": "specstoryautosave.debugCommands",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Debug Command Detection"
      },
      {
        "command": "specstoryautosave.toggleAINotifications",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Toggle AI Notifications"
      },
      {
        "command": "specstoryautosave.testHistoryDetection",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test SpecStory History Detection"
      },
      {
        "command": "specstoryautosave.testEnterDetection",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test Simple Enter Detection"
      },
      {
        "command": "specstoryautosave.testFileSystemDetection",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test File System Detection"
      },
      {
        "command": "specstoryautosave.debugAdvancedDetection",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Debug Advanced Detection (Source Code Based)"
      }
    ],
    "keybindings": [
      {
        "command": "specstoryautosave.forceAINotification",
        "key": "ctrl+shift+a",
        "when": "editorTextFocus"
      },
      {
        "command": "specstoryautosave.detectEnterInChat",
        "key": "enter",
        "when": "editorTextFocus && resourceScheme == 'chat-editing-snapshot-text-model'"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "specstoryAI",
          "title": "SpecStory AutoSave + AI Copilot Prompt Detection",
          "icon": "icon.png"
        }
      ]
    },
    "views": {
      "specstoryAI": [
        {
          "id": "specstoryAINotifications",
          "name": "AI Activity",
          "type": "webview",
          "when": "true"
        }
      ]
    },
    "configuration": {
      "title": "SpecStoryAutoSave",
      "properties": {
        "specstoryautosave.aiNotificationMessage": {
          "type": "string",
          "default": "Please check:\n• Did AI understand your question correctly?\n• If working with HTML, inspect for invisible elements\n• Verify the response quality and accuracy",
          "description": "Custom message to display in AI activity notifications (only applied when Activity Bar display is not available)",
          "when": "config.specstoryautosave.notificationDisplayType != 'activitybar'"
        },
        "specstoryautosave.aiNotificationFrequency": {
          "type": "number",
          "default": 1,
          "minimum": 1,
          "maximum": 100,
          "description": "Show AI notification every Nth prompt - 1 = every prompt, 2 = every 2nd prompt, etc. (only applied when Activity Bar display is not selected)",
          "when": "config.specstoryautosave.notificationDisplayType != 'activitybar'"
        },
        "specstoryautosave.enableDebugLogs": {
          "type": "boolean",
          "default": true,
          "description": "Enable detailed debug logging (recommended for development and troubleshooting)"
        },
        "specstoryautosave.detectionLevel": {
          "type": "string",
          "enum": ["off", "basic", "advanced", "aggressive"],
          "default": "basic",
          "description": "AI detection level: off (disabled), basic (command hooks only), advanced (+ panels/patterns), aggressive (+ code/memory detection)",
          "enumDescriptions": [
            "No AI detection - extension will not monitor for AI activity",
            "Basic detection - monitors VS Code commands only (recommended)",
            "Advanced detection - adds panel focus and content pattern detection",
            "Aggressive detection - includes code insertion and memory monitoring"
          ]
        },
        "specstoryautosave.enableCommandHookDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable detection via VS Code command interception (recommended for testing)"
        },
        "specstoryautosave.enableWebviewDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable detection when Copilot Chat webview panels become active (recommended)"
        },
        "specstoryautosave.enablePanelFocusDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable detection based on chat panel focus changes"
        },
        "specstoryautosave.enablePatternDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection by scanning document content for AI patterns"
        },
        "specstoryautosave.enableCodeInsertionDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable detection of AI activity based on code insertions (fast detection method)"
        },
        "specstoryautosave.enableMemoryDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection based on memory usage spikes (experimental)"
        },
        "specstoryautosave.enableTerminalDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection based on terminal activity and command execution (experimental - may cause false positives)"
        },
        "specstoryautosave.enableFileSystemDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection based on rapid file changes and creation patterns (experimental - may cause false positives)"
        },
        "specstoryautosave.enableSpecStoryExportDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection by actively exporting SpecStory data and monitoring changes (most reliable method, but requires SpecStory extension)"
        },
        "specstoryautosave.specStoryExportInterval": {
          "type": "number",
          "default": 2,
          "minimum": 1,
          "maximum": 10,
          "description": "Interval in seconds for SpecStory export attempts (1-10 seconds)"
        },
        "specstoryautosave.notificationDisplayType": {
          "type": "string",
          "enum": ["off", "notification", "panel", "activitybar"],
          "default": "activitybar",
          "description": "Choose how to display AI activity notifications: 'off' completely disables all Copilot prompt notifications, 'notification' for simple VS Code popup messages, 'panel' for detailed webview panels with formatting, 'activitybar' switches to extension's Activity Bar view after each prompt",
          "enumDescriptions": [
            "Completely disable all AI prompt notifications and Activity Bar switching",
            "Show simple popup notifications (single line messages only)",
            "Show detailed webview panels with rich formatting and action buttons",
            "Switch to extension's Activity Bar view automatically after each prompt (recommended)"
          ]
        },
        "specstoryautosave.activityBarMaxPrompts": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 50,
          "description": "Maximum number of AI prompts to show in Activity Bar view history (1-50)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run compile",
    "build": "tsc -p ./",
    "watch": "tsc -p ./",
    "compile": "tsc -p ./",
    "pretest": "pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.102.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  },
  "packageManager": "pnpm@10.10.0+sha512.d615db246fe70f25dcfea6d8d73dee782ce23e2245e3c4f6f888249fb568149318637dca73c2c5c8ef2a4ca0d5657fb9567188bfab47f566d1ee6ce987815c39"
}
