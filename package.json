{
  "name": "specstory-autosave",
  "displayName": "SpecStory AutoSave + AI Copilot Prompt Detection",
  "description": "Auto-exports GitHub Copilot Chat to SpecStory documentation + instant AI prompt detection with quality verification notifications",
  	"version": "1.1.55",
  "publisher": "sunamocz",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/sunamo/specstory-autosave"
  },
  "bugs": {
    "url": "https://github.com/sunamo/specstory-autosave/issues"
  },
  "homepage": "https://github.com/sunamo/specstory-autosave#readme",
  "keywords": [
    "specstory",
    "copilot",
    "chat",
    "export",
    "autosave",
    "ai",
    "automation"
  ],
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other",
    "AI"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "specstoryautosave.findSpecStoryCommands",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Find All SpecStory Commands (Test)"
      },
      {
        "command": "specstoryautosave.testSpecStoryDialog",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test SpecStory Dialog (Test)"
      },
      {
        "command": "specstoryautosave.test",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test Extension"
      },
      {
        "command": "specstoryautosave.exportNow",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Export Chat History Now"
      },
      {
        "command": "specstoryautosave.showCopilotCommands",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Show Available Copilot Commands (Debug)"
      },
      {
        "command": "specstoryautosave.listAllCommands",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: List All Available Commands (Debug)"
      },
      {
        "command": "specstoryautosave.testAINotification",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Force AI Notification (Test)"
      },
      {
        "command": "specstoryautosave.forceAINotification",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Force AI Notification"
      },
      {
        "command": "specstoryautosave.testCopilotDetection",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test Copilot Detection"
      },
      {
        "command": "specstoryautosave.resetPromptCounter",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Reset AI Prompt Counter"
      },
      {
        "command": "specstoryautosave.toggleCopilotOnlyLogs",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Toggle Copilot-Only Logs"
      },
      {
        "command": "specstoryautosave.clearLogs",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Clear Output Logs"
      },
      {
        "command": "specstoryautosave.showPromptStats",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Show AI Prompt Statistics"
      },
      {
        "command": "specstoryautosave.debugCommands",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Debug Command Detection"
      },
      {
        "command": "specstoryautosave.toggleAINotifications",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Toggle AI Notifications"
      },
      {
        "command": "specstoryautosave.keyboardTrigger",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Trigger AI Notification (Keyboard Test)"
      },
      {
        "command": "specstoryautosave.testHistoryDetection",
        "title": "SpecStory AutoSave + AI Copilot Prompt Detection: Test SpecStory History Detection"
      }
    ],
    "keybindings": [
      {
        "command": "specstoryautosave.forceAINotification",
        "key": "ctrl+shift+a",
        "when": "editorTextFocus"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "specstoryAI",
          "title": "SpecStory AutoSave + AI Copilot Prompt Detection",
          "icon": "icon.png"
        }
      ]
    },
    "views": {
      "specstoryAI": [
        {
          "id": "specstoryAINotifications",
          "name": "AI Activity",
          "type": "webview",
          "when": "true"
        }
      ]
    },
    "configuration": {
      "title": "SpecStoryAutoSave",
      "properties": {
        "specstoryautosave.autoSaveInterval": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 60,
          "description": "Auto-save interval in minutes for Copilot chat exports (1-60 minutes)"
        },
        "specstoryautosave.enableAutoSave": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic saving of chat history at regular intervals"
        },
        "specstoryautosave.enableAICheckNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Show red notifications to check AI results after each prompt"
        },
        "specstoryautosave.enableAutoConfirmDialog": {
          "type": "boolean",
          "default": false,
          "description": "Automatically confirm SpecStory export dialog instead of requiring manual confirmation"
        },
        "specstoryautosave.aiNotificationMessage": {
          "type": "string",
          "default": "AI prompt detected! Please check:\n• Did AI understand your question correctly?\n• If working with HTML, inspect for invisible elements\n• Verify the response quality and accuracy",
          "description": "Custom message to display in AI activity notifications"
        },
        "specstoryautosave.enableSmartNotifications": {
          "type": "boolean",
          "default": true,
          "description": "Enable smart notifications based on SpecStory conversation analysis (uses context-aware messages)"
        },
        "specstoryautosave.specstoryHistoryPath": {
          "type": "string",
          "default": "",
          "description": "Path to SpecStory history folder (e.g., C:\\Proj_Net\\portal-ui\\.specstory\\history\\). Leave empty for auto-detection."
        },
        "specstoryautosave.aiNotificationFrequency": {
          "type": "number",
          "default": 1,
          "minimum": 1,
          "maximum": 100,
          "description": "Show AI notification every Nth prompt (1 = every prompt, 2 = every 2nd prompt, etc.)"
        },
        "specstoryautosave.detectionLevel": {
          "type": "string",
          "enum": ["off", "basic", "advanced", "aggressive"],
          "default": "basic",
          "description": "AI detection level: off (disabled), basic (command hooks only), advanced (+ panels/patterns), aggressive (+ code/memory detection)",
          "enumDescriptions": [
            "No AI detection - extension will not monitor for AI activity",
            "Basic detection - monitors VS Code commands only (recommended)",
            "Advanced detection - adds panel focus and content pattern detection",
            "Aggressive detection - includes code insertion and memory monitoring"
          ]
        },
        "specstoryautosave.enableCommandHookDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable detection via VS Code command interception (recommended for testing)"
        },
        "specstoryautosave.enableWebviewDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable detection when Copilot Chat webview panels become active (recommended)"
        },
        "specstoryautosave.enablePanelFocusDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection based on chat panel focus changes"
        },
        "specstoryautosave.enablePatternDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection by scanning document content for AI patterns"
        },
        "specstoryautosave.enableCodeInsertionDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection of AI activity based on large code insertions (fallback method)"
        },
        "specstoryautosave.enableMemoryDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection based on memory usage spikes (experimental)"
        },
        "specstoryautosave.enableTerminalDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection based on terminal activity and command execution (experimental - may cause false positives)"
        },
        "specstoryautosave.enableFileSystemDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection based on rapid file changes and creation patterns (experimental - may cause false positives)"
        },
        "specstoryautosave.enableKeyboardActivityDetection": {
          "type": "boolean",
          "default": false,
          "description": "Enable detection based on rapid typing patterns typical for AI code generation (experimental - may cause false positives)"
        },
        "specstoryautosave.enableDebugLogs": {
          "type": "boolean",
          "default": false,
          "description": "Enable detailed debug logging (disable for production builds)"
        },
        "specstoryautosave.showOnlyCopilotLogs": {
          "type": "boolean",
          "default": true,
          "description": "Show only Copilot/AI related logs in the output channel (filters out other extension logs)"
        },
        "specstoryautosave.notificationDisplayType": {
          "type": "string",
          "enum": ["notification", "panel", "activitybar"],
          "default": "activitybar",
          "description": "Choose how to display AI activity notifications: 'notification' for VS Code popup, 'panel' for webview panel, 'activitybar' for dedicated activity bar view",
          "enumDescriptions": [
            "Show simple popup notifications (single line only)",
            "Show detailed webview panels with formatting and buttons",
            "Show in dedicated activity bar view with persistent history"
          ]
        },
        "specstoryautosave.activityBarMaxPrompts": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 50,
          "description": "Maximum number of AI prompts to show in Activity Bar view history (1-50)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.102.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  },
  "packageManager": "pnpm@10.10.0+sha512.d615db246fe70f25dcfea6d8d73dee782ce23e2245e3c4f6f888249fb568149318637dca73c2c5c8ef2a4ca0d5657fb9567188bfab47f566d1ee6ce987815c39"
}
